{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/TrelloBoard.js","actions/boardActions.js","components/BoardThumbnail.js","components/Home.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","initialState","list-0","cards","board","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","Object","objectSpread","defineProperty","_action$payload2","list","push","_action$payload3","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","card-0","cardsReducer","newCard","newText","board-0","lists","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","taggedTemplateLiteral","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","onFocus","e","target","select","value","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloCreate","ListsContainer","TrelloBoard_templateObject","TrelloBoard","onDragEnd","result","destination","source","match","params","listOrder","react_router_dom","to","direction","listCards","components_TrelloList","Thumbnail","BoardThumbnail_templateObject","Title","BoardThumbnail_templateObject2","BoardThumbnail","Thumbnails","Home_templateObject","HomeContainer","Home_templateObject2","CreateTitle","h3","Home_templateObject3","CreateInput","Home_templateObject4","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","textDecoration","components_BoardThumbnail","textAlign","AppRouter","react_router","path","exact","component","Home","App","routes","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kQAGaA,EAAU,SAAAC,GACrB,OAAO,SAACC,EAAUC,GAChB,IAAMC,EAAUD,IAAWE,YACrBC,EAAKC,MACXL,EAAS,CACPM,KAAMC,EAAUC,SAChBC,QAAS,CAAEV,QAAOG,UAASE,UAKpBM,EAAO,SAClBC,EACAC,EACAC,EACAC,EACAC,EACAT,GAEA,OAAO,SAACN,EAAUC,GAChB,IAAMC,EAAUD,IAAWE,YAC3BH,EAAS,CACPM,KAAMC,EAAUS,cAChBP,QAAS,CACPE,mBACAC,iBACAE,oBACAD,sBACAE,cACAT,OACAJ,eC9BKe,EAAU,SAACC,EAAQC,GAC9B,IAAMf,EAAKC,MACX,MAAO,CACLC,KAAMC,EAAUa,SAChBX,QAAS,CAAEU,OAAMD,SAAQd,QCHhBG,EAAY,CACvBa,SAAU,WACVZ,SAAU,WACVQ,cAAe,gBACfK,UAAW,YACXC,YAAa,cACbC,gBAAiB,kBACjBC,YAAa,cACbC,iBAAkB,mBAClBC,UAAW,aCXPC,EAAe,CACnBC,SAAU,CACRxB,GAAI,SACJyB,MAAO,CAAC,UACR9B,MAAO,SACP+B,MAAO,YAiGIC,EA7FM,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAO9B,MACb,KAAKC,EAAUC,SAAU,IAAA6B,EACDD,EAAO3B,QAArBV,EADesC,EACftC,MAAOK,EADQiC,EACRjC,GACTkC,EAAU,CACdvC,MAAOA,EACPK,GAAE,QAAAmC,OAAUnC,GACZyB,MAAO,IAKT,OAFcW,OAAAC,EAAA,EAAAD,CAAA,GAAQR,EAARQ,OAAAE,EAAA,EAAAF,CAAA,WAAAD,OAAwBnC,GAAOkC,IAK/C,KAAK/B,EAAUa,SAAU,IAAAuB,EACAP,EAAO3B,QAAtBS,EADeyB,EACfzB,OAAQd,EADOuC,EACPvC,GACVwC,EAAOZ,EAAMd,GAEnB,OADA0B,EAAKf,MAAMgB,KAAX,QAAAN,OAAwBnC,IACjBoC,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoBtB,EAAS0B,IAG/B,KAAKrC,EAAUS,cAAf,IAAA8B,EAQMV,EAAO3B,QANTE,EAFJmC,EAEInC,iBACAC,EAHJkC,EAGIlC,eACAE,EAJJgC,EAIIhC,kBACAD,EALJiC,EAKIjC,oBAMF,GAAa,SAXfiC,EAOIxC,KAKA,OAAO0B,EAIT,GAAIrB,IAAqBC,EAAgB,KAAAmC,EACjCH,EAAOZ,EAAMrB,GACbqC,EAAOJ,EAAKf,MAAMoB,OAAOpC,EAAqB,GAEpD,OADAkC,EAAAH,EAAKf,OAAMoB,OAAXC,MAAAH,EAAA,CAAkBjC,EAAmB,GAArCyB,OAAAC,OAAAW,EAAA,EAAAX,CAA2CQ,KACpCR,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoB7B,EAAmBiC,IAIzC,GAAIjC,IAAqBC,EAAgB,KAAAwC,EAAAC,EAEjCC,EAAYtB,EAAMrB,GAElBqC,EAAOM,EAAUzB,MAAMoB,OAAOpC,EAAqB,GAEnD0C,EAAUvB,EAAMpB,GAItB,OADAwC,EAAAG,EAAQ1B,OAAMoB,OAAdC,MAAAE,EAAA,CAAqBtC,EAAmB,GAAxCyB,OAAAC,OAAAW,EAAA,EAAAX,CAA8CQ,KACvCR,OAAAC,EAAA,EAAAD,CAAA,GACFR,GADLqB,EAAA,GAAAb,OAAAE,EAAA,EAAAF,CAAAa,EAEG1C,EAAmB2C,GAFtBd,OAAAE,EAAA,EAAAF,CAAAa,EAGGzC,EAAiB2C,GAHpBF,IAMF,OAAOrB,EAET,KAAKzB,EAAUe,YAAa,IAAAkC,EACHpB,EAAO3B,QAAtBS,EADkBsC,EAClBtC,OAAQd,EADUoD,EACVpD,GAEVwC,EAAOZ,EAAMd,GACbuC,EAAWb,EAAKf,MAAM6B,OAAO,SAAAC,GAAM,OAAIA,IAAWvD,IAExD,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoBtB,EAApBsB,OAAAC,EAAA,EAAAD,CAAA,GAAkCI,EAAlC,CAAwCf,MAAO4B,MAGjD,KAAKlD,EAAUgB,gBAAiB,IAAAqC,EACDxB,EAAO3B,QAA5BS,EADsB0C,EACtB1C,OAAQ2C,EADcD,EACdC,SAEVjB,EAAOZ,EAAMd,GAEnB,OADA0B,EAAK7C,MAAQ8D,EACNrB,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoBtB,EAAS0B,IAG/B,KAAKrC,EAAUiB,YAAa,IAEpBsC,EAAW9B,EAEjB,cADO8B,EAFY1B,EAAO3B,QAAlBS,QAGD4C,EAGT,QACE,OAAO9B,IClGPL,EAAe,CACnBoC,SAAU,CACR5C,KAAM,eACNf,GAAE,SACFwC,KAAM,WAmCKoB,EA/BM,WAAkC,IAAjChC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAO9B,MACb,KAAKC,EAAUa,SAAU,IAAAiB,EACMD,EAAO3B,QAA5BU,EADekB,EACflB,KAAMD,EADSmB,EACTnB,OAAQd,EADCiC,EACDjC,GAEhB6D,EAAU,CACd9C,OACAf,GAAE,QAAAmC,OAAUnC,GACZwC,KAAM1B,GAGR,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,WAAAD,OAA4BnC,GAAO6D,IAErC,KAAK1D,EAAUc,UAAW,IAAAsB,EACAP,EAAO3B,QAAvBL,EADgBuC,EAChBvC,GAAI8D,EADYvB,EACZuB,QACNlB,EAAOhB,EAAM5B,GAEnB,OADA4C,EAAK7B,KAAO+C,EACL1B,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,WAAAD,OAA4BnC,GAAO4C,IAGrC,KAAKzC,EAAUe,YAAa,IAEpBwC,EAAW9B,EAEjB,cADO8B,EAFQ1B,EAAO3B,QAAdL,IAGD0D,EAET,QACE,OAAO9B,ICnCPL,EAAe,CACnBwC,UAAW,CACT/D,GAAI,UACJgE,MAAO,CAAC,UACRrE,MAAO,YA8DIsE,EA1DO,WAAkC,IAAjCrC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAQC,EAAO9B,MACb,KAAKC,EAAUC,SAAU,IAAA6B,EACCD,EAAO3B,QAAvBP,EADemC,EACfnC,QAASE,EADMiC,EACNjC,GACX0B,EAAQE,EAAM9B,GACdoE,EAAS,QAAA/B,OAAWnC,GACpBmE,EAAQ,GAAAhC,OAAAC,OAAAW,EAAA,EAAAX,CAAOV,EAAMsC,OAAb,CAAoBE,IAElC,OADAxC,EAAMsC,MAAQG,EACP/B,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoBtC,EAAU4B,IAGhC,KAAKvB,EAAUS,cAAe,IACpBd,EAAYkC,EAAO3B,QAAnBP,QACF4B,EAAQE,EAAM9B,GACdkE,EAAQtC,EAAMsC,MAHQzB,EASxBP,EAAO3B,QAJTK,EAL0B6B,EAK1B7B,kBACAD,EAN0B8B,EAM1B9B,oBAMF,GAAa,SAZe8B,EAQ1BrC,KAImB,CACnB,IAAMkE,EAAgBJ,EAAMnB,OAAOpC,EAAqB,GAIxD,OAHAuD,EAAMnB,OAANC,MAAAkB,EAAK,CAAQtD,EAAmB,GAA3ByB,OAAAC,OAAAW,EAAA,EAAAX,CAAiCgC,KACtC1C,EAAMsC,MAAQA,EAEP5B,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoBtC,EAAU4B,IAEhC,OAAOE,EAET,KAAKzB,EAAUiB,YAAa,IAAAsB,EACEV,EAAO3B,QAA3BS,EADkB4B,EAClB5B,OAAQhB,EADU4C,EACV5C,QACV4B,EAAQE,EAAM9B,GAEdqE,EADQzC,EAAMsC,MACGV,OAAO,SAAAtD,GAAE,OAAIA,IAAOc,IAE3C,OADAY,EAAMsC,MAAQG,EACP/B,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoBtC,EAAU4B,IAGhC,KAAKvB,EAAUmB,UAAW,IAAA8B,EACFpB,EAAO3B,QAArBV,EADgByD,EAChBzD,MAAOK,EADSoD,EACTpD,GACTqE,EAAK,SAAAlC,OAAYnC,GACjBsE,EAAW,CACftE,GAAIqE,EACJ1E,QACAqE,MAAO,IAGT,OAAO5B,OAAAC,EAAA,EAAAD,CAAA,GAAKR,EAAZQ,OAAAE,EAAA,EAAAF,CAAA,GAAoBiC,EAAQC,IAG9B,QACE,OAAO1C,IC7Db2C,QAAQC,IAAIvE,OAEZ,kDAAMsB,EAAe,CAAC,WAYPkD,EAVW,WAAkC,IAAjC7C,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAQC,EAAO9B,MACb,KAAKC,EAAUmB,UACb,SAAAa,OAAAC,OAAAW,EAAA,EAAAX,CAAWR,GAAX,UAAAO,OAA2BH,EAAO3B,QAAQL,MAE5C,QACE,OAAO4B,ICEE8C,EAXY,WAAkC,IAAjC9C,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFxC,KAE6BG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQC,EAAO9B,MACb,KAAKC,EAAUkB,iBACb,OAAOW,EAAO3B,QAGhB,QACE,OAAOuB,ICJE+C,cAAgB,CAC7BX,MAAOrC,EACPF,MAAOmC,EACPgB,OAAQX,EACRY,WAAYJ,EACZ1E,YAAa2E,+BCLTI,GAAgB,CACpBC,IAAK,OACLC,mBAGIC,GAAmBC,YAAeJ,GAAeK,sKCNjDC,GAAYC,KAAOC,IAAVC,MAAAnD,OAAAoD,EAAA,EAAApD,CAAA,kDAKTqD,GAAaJ,aAAOK,KAAPL,CAAHM,MAAAvD,OAAAoD,EAAA,EAAApD,CAAA,wDAKVwD,GAAiBP,aAAOQ,KAAPR,CAAHS,MAAA1D,OAAAoD,EAAA,EAAApD,CAAA,mGAQd2D,GAAkBV,KAAOC,IAAVU,MAAA5D,OAAAoD,EAAA,EAAApD,CAAA,6FAOf6D,GAAaZ,aAAOa,KAAPb,CAAHc,MAAA/D,OAAAoD,EAAA,EAAApD,CAAA,mDAoCDgE,GA/BIC,IAAMC,KACvB,SAAAC,GAAwD,IAArD/D,EAAqD+D,EAArD/D,KAAqDgE,EAAAD,EAA/CxF,YAA+C,IAAAyF,EAAxC,GAAwCA,EAApCC,EAAoCF,EAApCE,SAAUC,EAA0BH,EAA1BG,UAAWC,EAAeJ,EAAfI,SACjCC,EAAcpE,EAChB,sBACA,iCAMJ,OACEqE,EAAAC,EAAAC,cAAC3B,GAAD,KACEyB,EAAAC,EAAAC,cAACtB,GAAD,KACEoB,EAAAC,EAAAC,cAACnB,GAAD,CACEgB,YAAaA,EACbI,WAAS,EACTC,QAVY,SAAAC,GAClBA,EAAEC,OAAOC,UAUHC,MAAOtG,EACP0F,SAAU,SAAAS,GAAC,OAAIT,EAASS,IACxBI,OAAQZ,KAGZG,EAAAC,EAAAC,cAAChB,GAAD,KACGY,EACDE,EAAAC,EAAAC,cAACd,GAAD,CAAYsB,YAAab,GAAzB,kCCxDJc,GAAenC,aAAOoC,KAAPpC,CAAHqC,MAAAtF,OAAAoD,EAAA,EAAApD,CAAA,oEAeHuF,GARM,SAAApB,GAA2B,IAAxBI,EAAwBJ,EAAxBI,SAAUiB,EAAcrB,EAAdqB,QAChC,OACEf,EAAAC,EAAAC,cAACS,GAAD,CAAcK,QAAQ,YAAYN,YAAaK,GAC5CjB,ICFDmB,GAAgBzC,KAAOC,IAAVyC,MAAA3F,OAAAoD,EAAA,EAAApD,CAAA,qGAOb4F,GAAa3C,aAAOa,KAAPb,CAAH4C,MAAA7F,OAAAoD,EAAA,EAAApD,CAAA,qMAMZ0F,IASEI,GAAe7C,aAAOa,KAAPb,CAAH8C,MAAA/F,OAAAoD,EAAA,EAAApD,CAAA,wMAMd0F,IASEM,GAAa/B,IAAMC,KAAK,SAAAC,GAA2C,IAAxCxF,EAAwCwF,EAAxCxF,KAAMf,EAAkCuG,EAAlCvG,GAAIc,EAA8ByF,EAA9BzF,OAAQuH,EAAsB9B,EAAtB8B,MAAOzI,EAAe2G,EAAf3G,SAAe0I,EACrCC,oBAAS,GAD4BC,EAAApG,OAAAqG,GAAA,EAAArG,CAAAkG,EAAA,GAChEI,EADgEF,EAAA,GACrDG,EADqDH,EAAA,GAAAI,EAE3CL,mBAASxH,GAFkC8H,EAAAzG,OAAAqG,GAAA,EAAArG,CAAAwG,EAAA,GAEhEE,EAFgED,EAAA,GAEtDE,EAFsDF,EAAA,GAIjEnC,EAAY,SAAAQ,GAChByB,GAAa,IAGTK,EAAe,SAAA9B,GACnB6B,EAAQ7B,EAAEC,OAAOE,QAGb4B,EAAW,SAAA/B,GACfA,EAAEgC,iBAEFtJ,EXrDoB,SAACI,EAAIc,EAAQgD,GACnC,MAAO,CACL5D,KAAMC,EAAUc,UAChBZ,QAAS,CAAEL,KAAIc,SAAQgD,YWkDdqF,CAASnJ,EAAIc,EAAQgI,IAC9BH,GAAa,IAGTS,EAAmB,SAAAlC,GACvB3C,QAAQC,IAAI1D,GACZlB,EXpDsB,SAACI,EAAIc,GAC7B,MAAO,CACLZ,KAAMC,EAAUe,YAChBb,QAAS,CAAEL,KAAIc,WWiDNuI,CAAWrJ,EAAIc,KA0C1B,OAAO4H,EArCH7B,EAAAC,EAAAC,cAACuC,GAAD,CAAYvI,KAAM+H,EAAUrC,SAAUuC,EAActC,UAAWA,GAC7DG,EAAAC,EAAAC,cAACwC,GAAD,CAAc3B,QAASqB,GAAvB,SAOFpC,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAW7I,YAAa8I,OAAOzJ,GAAKqI,MAAOA,GACxC,SAAAqB,GAAQ,OACP7C,EAAAC,EAAAC,cAACe,GAAD1F,OAAAuH,OAAA,GACMD,EAASE,eACTF,EAASG,gBAFf,CAGEC,IAAKJ,EAASK,SACdC,cAAe,kBAAMrB,GAAa,MAElC9B,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,KACED,EAAAC,EAAAC,cAACiB,GAAD,CACET,YAAa,kBAAMoB,GAAa,IAChCuB,SAAS,SAFX,QAMArD,EAAAC,EAAAC,cAACmB,GAAD,CAAcgC,SAAS,QAAQ3C,YAAa6B,GAA5C,KAIAvC,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,KACED,EAAAC,EAAAC,cAACqD,GAAAtD,EAAD,KAAa/F,UAYdsJ,iBAAUjC,ICnFVkC,GA5BQ,SAAA/D,GAAiC,IAA9B/D,EAA8B+D,EAA9B/D,KAAMmE,EAAwBJ,EAAxBI,SAAUiB,EAAcrB,EAAdqB,QAClC2C,EAAoB/H,EAAO,EAAI,GAC/BgI,EAAkBhI,EAAO,QAAU,UACnCiI,EAAuBjI,EAAO,kBAAoB,UAElDkI,EAAiBrF,KAAOC,IAAVqF,MAAAvI,OAAAoD,EAAA,EAAApD,CAAA,wRAUPmI,EACFC,EACWC,GAGtB,OACE5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAgB9C,QAASA,GACvBf,EAAAC,EAAAC,cAAC6D,GAAA9D,EAAD,YACAD,EAAAC,EAAAC,cAAA,KAAG8D,MAAO,CAAEC,WAAY,IAAMnE,KClB9BoE,iNACJnJ,MAAQ,CACNoJ,UAAU,EACVjK,KAAM,MAGRkK,SAAW,WACTC,EAAKC,SAAS,CACZH,UAAU,OAIdtE,UAAY,SAAAQ,GACVgE,EAAKC,SAAS,CACZH,UAAU,OAIdI,kBAAoB,SAAAlE,GAClBgE,EAAKC,SAAS,CACZpK,KAAMmG,EAAEC,OAAOE,WAInBgE,cAAgB,WAAM,IACZzL,EAAasL,EAAKI,MAAlB1L,SACAmB,EAASmK,EAAKtJ,MAAdb,KAEJA,IACFmK,EAAKC,SAAS,CACZpK,KAAM,KAERnB,EAASF,EAAQqB,QAMrBwK,cAAgB,WAAM,IAAAC,EACSN,EAAKI,MAA1B1L,EADY4L,EACZ5L,SAAUkB,EADE0K,EACF1K,OACVC,EAASmK,EAAKtJ,MAAdb,KAEJA,IACFmK,EAAKC,SAAS,CACZpK,KAAM,KAERnB,EAASiB,EAAQC,EAAQC,QAI7B0K,eAAiB,WAAM,IACbjJ,EAAS0I,EAAKI,MAAd9I,KAEFkJ,EAAalJ,EAAO,mBAAqB,mBACzC+H,EAAoB/H,EAAO,EAAI,GAC/BgI,EAAkBhI,EAAO,QAAU,UACnCiI,EAAuBjI,EAAO,kBAAoB,UAElDkI,EAAiBrF,KAAOC,IAAVqG,MAAAvJ,OAAAoD,EAAA,EAAApD,CAAA,kTAUPmI,EACFC,EACWC,GAGtB,OACE5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAgB9C,QAASsD,EAAKD,UAC5BpE,EAAAC,EAAAC,cAAC6D,GAAA9D,EAAD,YACAD,EAAAC,EAAAC,cAAA,KAAG8D,MAAO,CAAEC,WAAY,IAAMY,+EAK3B,IACC3K,EAAS6K,KAAKhK,MAAdb,KACAyB,EAASoJ,KAAKN,MAAd9I,KACR,OAAOoJ,KAAKhK,MAAMoJ,SAChBnE,EAAAC,EAAAC,cAACuC,GAAD,CACEvI,KAAMA,EACN0F,SAAUmF,KAAKR,kBACf1E,UAAWkF,KAAKlF,WAEhBG,EAAAC,EAAAC,cAACwC,GAAD,CAAc3B,QAASpF,EAAOoJ,KAAKP,cAAgBO,KAAKL,eACrD/I,EAAO,WAAa,aAIzBqE,EAAAC,EAAAC,cAAC8E,GAAD,CAAgBrJ,KAAMA,EAAMoF,QAASgE,KAAKX,UACvCzI,EAAO,mBAAqB,2BAhGV6D,IAAMyF,eAsGlBzB,iBAAUU,ICtGnBgB,GAAgB1G,KAAOC,IAAV0G,MAAA5J,OAAAoD,EAAA,EAAApD,CAAA,wIASb6J,GAAc5G,KAAO6G,MAAVC,MAAA/J,OAAAoD,EAAA,EAAApD,CAAA,kIASXgK,GAAiB/G,KAAOC,IAAV+G,MAAAjK,OAAAoD,EAAA,EAAApD,CAAA,4IASd8F,GAAe7C,aAAOa,KAAPb,CAAHiH,MAAAlK,OAAAoD,EAAA,EAAApD,CAAA,6HASZmK,GAAYlH,KAAOmH,GAAVC,MAAArK,OAAAoD,EAAA,EAAApD,CAAA,8FAEXgK,IAuFW/B,iBAlFI,SAAA9D,GAA+C,IAA5C5G,EAA4C4G,EAA5C5G,MAAO8B,EAAqC8E,EAArC9E,MAAOX,EAA8ByF,EAA9BzF,OAAQuH,EAAsB9B,EAAtB8B,MAAOzI,EAAe2G,EAAf3G,SAAe0I,EAC9BC,oBAAS,GADqBC,EAAApG,OAAAqG,GAAA,EAAArG,CAAAkG,EAAA,GACzDI,EADyDF,EAAA,GAC9CG,EAD8CH,EAAA,GAAAI,EAE9BL,mBAAS5I,GAFqBkJ,EAAAzG,OAAAqG,GAAA,EAAArG,CAAAwG,EAAA,GAEzD8D,EAFyD7D,EAAA,GAE9C8D,EAF8C9D,EAAA,GAmB1D+D,EAAc,SAAA1F,GAClBA,EAAEC,OAAOC,UAGL4B,EAAe,SAAA9B,GACnBA,EAAEgC,iBACFyD,EAAazF,EAAEC,OAAOE,QAGlBwF,EAAsB,SAAA3F,GAC1ByB,GAAa,GACb/I,Ef3CqB,SAACkB,EAAQ2C,GAChC,MAAO,CACLvD,KAAMC,EAAUgB,gBAChBd,QAAS,CACPS,SACA2C,aesCOqJ,CAAUhM,EAAQ4L,KAGvBK,EAAmB,WACvBnN,EfrCsB,SAAAkB,GACxB,OAAO,SAAClB,EAAUC,GAChB,IAAMC,EAAUD,IAAWE,YAC3B,OAAOH,EAAS,CACdM,KAAMC,EAAUiB,YAChBf,QAAS,CACPS,SACAhB,ce8BKkN,CAAWlM,KAGtB,OACE+F,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAW7I,YAAa8I,OAAO3I,GAASuH,MAAOA,GAC5C,SAAAqB,GAAQ,OACP7C,EAAAC,EAAAC,cAACgF,GAAD3J,OAAAuH,OAAA,GACMD,EAASE,eACTF,EAASG,gBAFf,CAGEC,IAAKJ,EAASK,WAEdlD,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAWyD,YAAaxD,OAAO3I,GAASZ,KAAK,QAC1C,SAAAwJ,GAAQ,OACP7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACG2B,EA3Cb7B,EAAAC,EAAAC,cAAA,QAAMmG,SAAUL,GACdhG,EAAAC,EAAAC,cAACkF,GAAD,CACE/L,KAAK,OACLmH,MAAOqF,EACPjG,SAAUuC,EACVhC,WAAS,EACTC,QAAS2F,EACTtF,OAAQuF,KAuCEhG,EAAAC,EAAAC,cAACqF,GAAD,CAAgBxE,QAAS,kBAAMe,GAAa,KAC1C9B,EAAAC,EAAAC,cAACwF,GAAD,KAAYG,GACZ7F,EAAAC,EAAAC,cAACoG,GAAD,CAAcvF,QAASmF,GAAvB,OAMNlG,EAAAC,EAAAC,cAAA,MAAA3E,OAAAuH,OAAA,GAASD,EAAS0D,eAAlB,CAAkCtD,IAAKJ,EAASK,WAC7CtI,EAAM4L,IAAI,SAACzK,EAAMyF,GAAP,OACTxB,EAAAC,EAAAC,cAACuG,GAAD,CACEvI,IAAKnC,EAAK5C,GACVe,KAAM6B,EAAK7B,KACXf,GAAI4C,EAAK5C,GACTqI,MAAOA,EACPvH,OAAQA,MAGX4I,EAAS9C,YACVC,EAAAC,EAAAC,cAACwG,GAAD,CAAczM,OAAQA,8BClHlC0M,GAAiBnI,KAAOC,IAAVmI,MAAArL,OAAAoD,EAAA,EAAApD,CAAA,oDAOdsL,iNAQJC,UAAY,SAAAC,GAAU,IACZC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,OAAQnN,EAAsBiN,EAAtBjN,YAAaT,EAAS0N,EAAT1N,KAErC2N,GAIL3C,EAAKI,MAAM1L,SACTU,EACEwN,EAAOb,YACPY,EAAYZ,YACZa,EAAOzF,MACPwF,EAAYxF,MACZ1H,EACAT,0FArBc,ICdQF,EDgBlBF,EAAY8L,KAAKN,MAAMyC,MAAMC,OAA7BlO,QAER8L,KAAKN,MAAM1L,UClBeI,EDkBSF,ECjB9B,CACLI,KAAMC,EAAUkB,iBAChBhB,QAASL,sCDqCF,IAAAwL,EACiCI,KAAKN,MAArCtH,EADDwH,EACCxH,MAAOvC,EADR+J,EACQ/J,MAAOsM,EADfvC,EACeuC,MAEhBrM,EAHC8J,EACsB5G,OACTmJ,EAAMC,OAAlBlO,SAER,IAAK4B,EACH,OAAOmF,EAAAC,EAAAC,cAAA,4BAET,IAAMkH,EAAYvM,EAAMsC,MAExB,OACE6C,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAiBmE,UAAW/B,KAAK+B,WAC/B9G,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAMC,GAAG,KAAT,WACAtH,EAAAC,EAAAC,cAAA,UAAKrF,EAAM/B,OACXkH,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAWyD,YAAY,YAAYmB,UAAU,aAAalO,KAAK,QAC5D,SAAAwJ,GAAQ,OACP7C,EAAAC,EAAAC,cAACyG,GAADpL,OAAAuH,OAAA,GACMD,EAAS0D,eADf,CAEEtD,IAAKJ,EAASK,WAEbkE,EAAUZ,IAAI,SAACvM,EAAQuH,GACtB,IAAM7F,EAAOwB,EAAMlD,GACnB,GAAI0B,EAAM,CACR,IAAM6L,EAAY7L,EAAKf,MAAM4L,IAAI,SAAA9J,GAAM,OAAI9B,EAAM8B,KAEjD,OACEsD,EAAAC,EAAAC,cAACuH,GAAD,CACExN,OAAQ0B,EAAKxC,GACb+E,IAAKvC,EAAKxC,GACVL,MAAO6C,EAAK7C,MACZ8B,MAAO4M,EACPhG,MAAOA,OAKdqB,EAAS9C,YACVC,EAAAC,EAAAC,cAACwG,GAAD,CAAc/K,MAAI,eA/DNsJ,iBA8EXzB,eANS,SAAAzI,GAAK,MAAK,CAChCoC,MAAOpC,EAAMoC,MACbvC,MAAOG,EAAMH,MACbmD,OAAQhD,EAAMgD,SAGDyF,CAAyBqD,IE3FlCa,GAAYlJ,KAAOC,IAAVkJ,MAAApM,OAAAoD,EAAA,EAAApD,CAAA,smBAeXmM,IAUEE,GAAQpJ,KAAOmH,GAAVkC,MAAAtM,OAAAoD,EAAA,EAAApD,CAAA,qDAcIuM,GATQ,SAAApI,GAAe,IAAZ5G,EAAY4G,EAAZ5G,MAExB,OADA4E,QAAQC,IAAI7E,GAEVkH,EAAAC,EAAAC,cAACwH,GAAD,KACE1H,EAAAC,EAAAC,cAAC0H,GAAD,KAAQ9O,KC9BRiP,GAAavJ,KAAOC,IAAVuJ,MAAAzM,OAAAoD,EAAA,EAAApD,CAAA,4LAWV0M,GAAgBzJ,KAAOC,IAAVyJ,MAAA3M,OAAAoD,EAAA,EAAApD,CAAA,0GAOb4M,GAAc3J,KAAO4J,GAAVC,MAAA9M,OAAAoD,EAAA,EAAApD,CAAA,8GAOX+M,GAAc9J,KAAO6G,MAAVkD,MAAAhN,OAAAoD,EAAA,EAAApD,CAAA,kmBAgBb+M,IAoEW9E,eALS,SAAAzI,GAAK,MAAK,CAChCgD,OAAQhD,EAAMgD,OACdC,WAAYjD,EAAMiD,aAGLwF,CAzDF,SAAA9D,GAAsC,IAAnC3B,EAAmC2B,EAAnC3B,OAAQC,EAA2B0B,EAA3B1B,WAAYjF,EAAe2G,EAAf3G,SAAe0I,EAGPC,mBAAS,IAHFC,EAAApG,OAAAqG,GAAA,EAAArG,CAAAkG,EAAA,GAG1C+G,EAH0C7G,EAAA,GAG3B8G,EAH2B9G,EAAA,GAK3CQ,EAAe,SAAA9B,GACnBoI,EAAiBpI,EAAEC,OAAOE,QAGtBkI,EAAe,SAAArI,GACnBA,EAAEgC,iBACFtJ,EF5DoB,SAAAD,GACtB,IAAMK,EAAKC,MACX,MAAO,CACLC,KAAMC,EAAUmB,UAChBjB,QAAS,CAAEV,QAAOK,OEwDTwP,CAASH,KAiCpB,OACExI,EAAAC,EAAAC,cAAC+H,GAAD,KACEjI,EAAAC,EAAAC,cAAC6H,GAAD,KA/BK/J,EAAWwI,IAAI,SAAAvN,GACpB,IAAM4B,EAAQkD,EAAO9E,GAErB,OACE+G,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CACEnJ,IAAKjF,EACLqO,GAAE,IAAAhM,OAAMT,EAAM1B,IACd6K,MAAO,CAAE4E,eAAgB,SAEzB5I,EAAAC,EAAAC,cAAC2I,GAAmBhO,OAQxBmF,EAAAC,EAAAC,cAAA,QAAMmG,SAAUqC,EAAc1E,MAAO,CAAE8E,UAAW,WAChD9I,EAAAC,EAAAC,cAACiI,GAAD,2BACAnI,EAAAC,EAAAC,cAACoI,GAAD,CACE1I,SAAUuC,EACV3B,MAAOgI,EACPzI,YAAY,uBACZ1G,KAAK,aCjFA0P,GAXG,WAChB,OACE/I,EAAAC,EAAAC,cAACmH,GAAA,EAAD,KACErH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjCpJ,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWtC,QCI5BwC,yLAJX,OAAOrJ,EAAAC,EAAAC,cAACoJ,GAAD,aAFOrE,iBCIEsE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxC,MACvB,2GbJS,WACb,IAAIyC,EAAQC,YAAYxL,GAAkByL,YAAgBC,MAE1D,MAAO,CAAEH,QAAOI,UADAC,YAAaL,IcLFM,GAArBF,gBAAWJ,YAEbO,GAAcC,aAAHC,QAAA7O,OAAAoD,EAAA,EAAApD,CAAA,8KAUjB8O,IAASC,OACPtK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAUZ,MAAOA,IACf3J,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CAAaC,QAAS,KAAMV,UAAWA,IACrC/J,EAAAC,EAAAC,cAACgK,GAAD,MACAlK,EAAAC,EAAAC,cAACwK,GAAD,QAGJC,SAASC,eAAe,SAG1BC,KAAEF,UAAUG,KAAK,iBAAkB,SAASzK,GAC1C3C,QAAQC,IAAI,YAAc0C,EAAEC,OAAOyK,YD+F/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5cc32c41.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, boardID, id }\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        boardID\n      }\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        boardID\n      }\n    });\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"myList\",\n    board: \"board-0\"\n  }\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Last Episode\",\n    id: `card-0`,\n    list: \"list-0\"\n  }\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"myboard\"\n  }\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: []\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nconsole.log(uuid());\n\nconst initialState = [\"board-0\"];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n\n    const handleFocus = e => {\n      e.target.select();\n    };\n    \n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            onFocus={handleFocus}\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    console.log(listID);\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                -\n              </DeleteButton>\n\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        -\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n// TODO: Fix performance issue\n\nclass TrelloBoard extends PureComponent {\n  componentDidMount() {\n    // set active trello board here\n    const { boardID } = this.props.match.params;\n\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, boards } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Link to=\"/\">Go Back</Link>\n        <h2>{board.title}</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map(cardID => cards[cardID]);\n\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards\n});\n\nexport default connect(mapStateToProps)(TrelloBoard);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveBoard = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_BOARD,\n    payload: id\n  };\n};\n\nexport const addBoard = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_BOARD,\n    payload: { title, id }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n  height: 280px;\n  width: 280px;\n  background-color: white;\n  padding: 1rem;\n  margin: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 15px;\n  border: 2px solid rgba(0, 0, 0, 0.42);\n  box-shadow: 20px 20px 40px rgba(128,128,128,0.5);\n  transform: translateX(0px) translateY(0px);\n  transition: 0.5s ease-in-out;\n  ${Thumbnail}:hover & {\n    transition: 0.5s ease-in-out;\n  }\n  &:hover {\n    transform: translateX(-10px) translateY(-10px);\n    box-shadow: 30px 30px 50px rgba(128,128,128,0.5);\n    transition: 0.5s ease-in-out;\n  }\n`;\n\nconst Title = styled.h4`\n  color: black;\n  text-decoration: none;\n`;\n\nconst BoardThumbnail = ({ title }) => {\n  console.log(title);\n  return (\n    <Thumbnail>\n      <Title>{title}</Title>\n    </Thumbnail>\n  );\n};\n\nexport default BoardThumbnail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addBoard } from \"../actions\";\nimport BoardThumbnail from \"./BoardThumbnail\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 2rem;\n  color: black;\n  font-weight: bold;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: auto;\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1rem;\n  padding: 15px;\n  // padding-left: 15px;\n  // padding-right: 15px;\n  box-sizing: border-box;\n  border-radius: 15px;\n  border: 2px solid rgba(0, 0, 0, 0.5);\n  // border-color: black;\n  outline: none;\n  box-shadow: 20px 20px 40px rgba(128,128,128,0.5);\n  align-self: center;\n  transition: 0.5s ease-in-out;\n  ${CreateInput}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:focus {\n    // opacity: 0.8;\n    border: 2px solid rgba(80, 200, 250, 0.69);\n    transition: 0.5s ease-in-out;\n  }\n`;\n\nconst Home = ({ boards, boardOrder, dispatch }) => {\n  // this is the home site that shows you your boards and you can also create a Board here.\n\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\n\n  const handleChange = e => {\n    setNewBoardTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBoard(newBoardTitle));\n  };\n\n  const renderBoards = () => {\n    return boardOrder.map(boardID => {\n      const board = boards[boardID];\n\n      return (\n        <Link\n          key={boardID}\n          to={`/${board.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <BoardThumbnail {...board} />\n        </Link>\n      );\n    });\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <CreateTitle>Create a new Board</CreateTitle>\n        <CreateInput\n          onChange={handleChange}\n          value={newBoardTitle}\n          placeholder=\"Your boards title...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  };\n\n  return (\n    <HomeContainer>\n      <Thumbnails>{renderBoards()}</Thumbnails>\n      {renderCreateBoard()}\n    </HomeContainer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  boards: state.boards,\n  boardOrder: state.boardOrder\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport TrelloBoard from \"../components/TrelloBoard\";\nimport Home from \"../components/Home\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:boardID\" component={TrelloBoard} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Routes from \"../routes\";\nimport { sort } from \"../actions\";\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport $ from \"jquery\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: white;\n    box-sizing: border-box;\n    transition: all 0.5s ease-in-out;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n$(document).bind(\"DOMNodeRemoved\", function(e) {\n  console.log(\"Removed: \" + e.target.nodeName);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}